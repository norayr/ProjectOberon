ORP.Compile @\s  ORL.Link M0  ORL.StartV24  ORL.Load  ORL.Flush
TestTRM.SR  0~

MODULE M0;
  IMPORT RS232, SYSTEM;
  VAR x, s, c: REAL; k: INTEGER;

  PROCEDURE sin*(x: REAL): REAL;
    CONST
      c1 =  6.3661977E-1; (*2/pi*)
      p0 =  7.8539816E-1;
      p1 = -8.0745512E-2;
      p2 =  2.4903946E-3;
      p3 = -3.6576204E-5;
      p4 =  3.1336162E-7;
      p5 = -1.7571493E-9;
      p6 =  6.8771004E-12;
      q0 =  9.9999999E-1;
      q1 = -3.0842514E-1;
      q2 =  1.5854344E-2;
      q3 = -3.2599189E-4;
      q4 =  3.5908591E-6;
      q5 = -2.4609457E-8;
      q6 =  1.1363813E-10;
    VAR n: INTEGER; y, yy, f: REAL;
  BEGIN y := c1*x;
    IF y >= 0.0 THEN n := FLOOR(y + 0.5) ELSE n := FLOOR(y - 0.5) END ;
    y := (y - FLT(n)) * 2.0; yy := y*y;
    IF ODD(n) THEN f := (((((q6*yy + q5)*yy + q4)*yy + q3)*yy + q2)*yy + q1)*yy + q0
    ELSE f := ((((((p6*yy + p5)*yy + p4)*yy + p3)*yy + p2)*yy + p1)*yy + p0)*y
    END ;
    IF ODD(n DIV 2) THEN f := -f END ;
    RETURN f
  END sin;

  PROCEDURE cos*(x: REAL): REAL;
    CONST
      c1 =  6.3661977E-1; (*2/pi*)
      p0 =  7.8539816E-1;
      p1 = -8.0745512E-2;
      p2 =  2.4903946E-3;
      p3 = -3.6576204E-5;
      p4 =  3.1336162E-7;
      p5 = -1.7571493E-9;
      p6 =  6.8771004E-12;
      q0 =  9.9999999E-1;
      q1 = -3.0842514E-1;
      q2 =  1.5854344E-2;
      q3 = -3.2599189E-4;
      q4 =  3.5908591E-6;
      q5 = -2.4609457E-8;
      q6 =  1.1363813E-10;
    VAR n: INTEGER; y, yy, f: REAL;
  BEGIN y := c1*x;
    IF y >= 0.0 THEN n := FLOOR(y + 0.5) ELSE n := FLOOR(y - 0.5) END ;
    y := (y - FLT(n)) * 2.0; yy := y*y;
    IF ~ODD(n) THEN f := (((((q6*yy + q5)*yy + q4)*yy + q3)*yy + q2)*yy + q1)*yy + q0
    ELSE f := ((((((p6*yy + p5)*yy + p4)*yy + p3)*yy + p2)*yy + p1)*yy + p0)*y
    END ;
    IF ODD((n+1) DIV 2) THEN f := -f END ;
    RETURN f
  END cos;

BEGIN SYSTEM.PUT(-60, 5);
  REPEAT RS232.RecInt(k); k := -12;
    REPEAT x := FLT(k) * 0.52359876; RS232.SendInt(k); RS232.SendReal(x);
      s := sin(x); c := cos(x); RS232.SendReal(s); RS232.SendReal(c); RS232.SendReal(s*s + c*c - 1.0);
      RS232.Line; INC(k)
    UNTIL k > 12;
    RS232.End
  UNTIL FALSE
END M0.

   -12 -6.2831845E+00  7.4901408E-07  1.0000000E+00  0.0000000E+00
   -11 -5.7595859E+00  5.0000083E-01  8.6602497E-01  1.1920929E-07
   -10 -5.2359872E+00  8.6602581E-01  4.9999923E-01 -1.1920929E-07
    -9 -4.7123885E+00  1.0000000E+00 -7.4901408E-07  0.0000000E+00
    -8 -4.1887898E+00  8.6602509E-01 -5.0000054E-01  0.0000000E+00
    -7 -3.6651909E+00  4.9999923E-01 -8.6602581E-01 -1.1920929E-07
    -6 -3.1415923E+00 -3.7450704E-07 -1.0000000E+00  0.0000000E+00
    -5 -2.6179936E+00 -5.0000024E-01 -8.6602533E-01  1.1920929E-07
    -4 -2.0943949E+00 -8.6602557E-01 -4.9999973E-01  0.0000000E+00
    -3 -1.5707961E+00 -1.0000000E+00  1.8725352E-07  0.0000000E+00
    -2 -1.0471975E+00 -8.6602533E-01  5.0000006E-01 -1.1920929E-07
    -1 -5.2359873E-01 -4.9999994E-01  8.6602545E-01  0.0000000E+00
     0  0.0000000E+00  0.0000000E+00  1.0000000E+00  0.0000000E+00
     1  5.2359873E-01  4.9999994E-01  8.6602545E-01  0.0000000E+00
     2  1.0471975E+00  8.6602533E-01  5.0000006E-01 -1.1920929E-07
     3  1.5707961E+00  1.0000000E+00  1.8725352E-07  0.0000000E+00
     4  2.0943949E+00  8.6602557E-01 -4.9999973E-01  0.0000000E+00
     5  2.6179936E+00  5.0000024E-01 -8.6602533E-01  1.1920929E-07
     6  3.1415923E+00  3.7450704E-07 -1.0000000E+00  0.0000000E+00
     7  3.6651909E+00 -4.9999923E-01 -8.6602581E-01 -1.1920929E-07
     8  4.1887898E+00 -8.6602509E-01 -5.0000054E-01  0.0000000E+00
     9  4.7123885E+00 -1.0000000E+00 -7.4901408E-07  0.0000000E+00
    10  5.2359872E+00 -8.6602581E-01  4.9999923E-01 -1.1920929E-07
    11  5.7595859E+00 -5.0000083E-01  8.6602497E-01  1.1920929E-07
    12  6.2831845E+00 -7.4901408E-07  1.0000000E+00  0.0000000E+00
