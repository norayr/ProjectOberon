ORP.Compile  ORL.Link M0  ORL.StartV24  ORL.Load  ORL.Flush
TestTRM.SR  0~

MODULE M0;
  IMPORT RS232, SYSTEM;
  VAR x, y, z: REAL; k: INTEGER;

  PROCEDURE ln0*(x: REAL): REAL;
    CONST c1 = 0.70710680;  (* 1/sqrt(2) *)
      c2 =  0.69314720;  (* ln(2) *)
      p0 = -9.01746917E1;
      p1 =  9.34639006E1;
      p2 = -1.83278704E1;
      q0 = -4.50873458E1;
      q1 =  6.176106560E1;
      q2 = -2.07334879E1;
    VAR e: INTEGER; xx, y: REAL;
  BEGIN
    IF x <= 0.0 THEN x := 0.0   (*illegal argument*)
    ELSE UNPK(x, e);
      IF x < c1 THEN x := x*2.0; e := e-1 END ;
      x := (x-1.0)/(x+1.0);
      xx := x;
      y := c2*FLT(e) + x*((p2*xx + p1)*xx + p0) / (((xx + q2)*xx + q1)*xx + q0);
    END ;
    RETURN y
  END ln0;

  PROCEDURE ln1*(x: REAL): REAL;
    CONST c1 = 0.70710680;  (* 1/sqrt(2) *)
      c2 = 0.69314720;  (* ln(2) *)
      c3 = 0.89554064;
      c4 = 1.82984416;
      c5 = 1.65677792;
    VAR e: INTEGER;
  BEGIN
    IF x <= 0.0 THEN x := 0.0   (*illegal argument*)
    ELSE UNPK(x, e);
      IF x < c1 THEN x := x*2.0; e := e-1 END ;
      x := (x-1.0)/(x+1.0);
      x := (c4/(c5 - x*x) + c3)*x;
      x := FLT(e)*c2 + x
    END ;
    RETURN x
  END ln1;

BEGIN SYSTEM.PUT(-60, 3);
  REPEAT RS232.RecInt(k); x := 1.0;
    REPEAT RS232.SendReal(x); y := ln0(x); RS232.SendReal(y); z := ln0(1.0/x); RS232.SendReal(z); RS232.SendReal(y+z);
      y := ln1(x); RS232.SendReal(y); z := ln1(1.0/x); RS232.SendReal(z); RS232.SendReal(y+z);
      RS232.Line; x := x + 0.1
    UNTIL x >= 3.0;
    RS232.End
  UNTIL FALSE
END M0.

  1.0000000E+00  0.0000000E+00  0.0000000E+00  0.0000000E+00  0.0000000E+00  0.0000000E+00  0.0000000E+00
  1.0999999E+00  9.6794426E-02 -4.3889999E-02  5.2904427E-02  9.5310085E-02 -9.5314980E-02 -4.8950315E-06
  1.1999998E+00  1.8764916E-01 -1.4384115E-01  4.3808013E-02  1.8232138E-01 -1.8232274E-01 -1.3560057E-06
  1.2999997E+00  2.7319115E-01 -2.3439586E-01  3.8795292E-02  2.6236397E-01 -2.6236439E-01 -4.1723251E-07
  1.3999996E+00  3.5395691E-01 -3.1692481E-01  3.7032098E-02  3.3647189E-01 -3.3647215E-01 -2.6822090E-07
  1.4999995E+00  4.3040851E-01 -3.9252698E-01  3.7881523E-02  4.0546465E-01 -4.0546483E-01 -1.7881393E-07
  1.5999994E+00  5.0294650E-01 -4.6209794E-01  4.0848553E-02  4.7000265E-01 -4.7000349E-01 -8.3446503E-07
  1.6999993E+00  5.7192051E-01 -5.2637553E-01  4.5544982E-02  5.3062618E-01 -5.3062791E-01 -1.7285347E-06
  1.7999992E+00  6.3763678E-01 -5.8597642E-01  5.1660359E-02  5.8778214E-01 -5.8778644E-01 -4.2915344E-06
  1.8999991E+00  7.0036507E-01 -6.4141971E-01  5.8945358E-02  6.4184493E-01 -6.4185363E-01 -8.7022781E-06
  1.9999990E+00  7.6034439E-01 -6.9314671E-01  6.7197680E-02  6.9313103E-01 -6.9314671E-01 -1.5676022E-05
  2.0999990E+00  7.4232960E-01 -6.8301153E-01  5.9318066E-02  7.4193680E-01 -7.4194562E-01 -8.8214874E-06
  2.1999989E+00  7.8994113E-01 -7.3703659E-01  5.2904546E-02  7.8845680E-01 -7.8846157E-01 -4.7683716E-06
  2.2999988E+00  8.3606946E-01 -7.8828549E-01  4.7783971E-02  8.3290857E-01 -8.3291113E-01 -2.5629997E-06
  2.3999987E+00  8.8079590E-01 -8.3698785E-01  4.3808043E-02  8.7546813E-01 -8.7546945E-01 -1.3113022E-06
  2.4999986E+00  9.2419559E-01 -8.8334680E-01  4.0848792E-02  9.1629010E-01 -9.1629088E-01 -7.7486038E-07
  2.5999985E+00  9.6633792E-01 -9.2754257E-01  3.8795352E-02  9.5551080E-01 -9.5551121E-01 -4.1723251E-07
  2.6999984E+00  1.0072874E+00 -9.6973610E-01  3.7551284E-02  9.9325109E-01 -9.9325132E-01 -2.3841858E-07
  2.7999983E+00  1.0471038E+00 -1.0100716E+00  3.7032127E-02  1.0296187E+00 -1.0296190E+00 -2.3841858E-07
  2.8999982E+00  1.0858425E+00 -1.0486785E+00  3.7163973E-02  1.0647100E+00 -1.0647103E+00 -2.3841858E-07
  2.9999981E+00  1.1235554E+00 -1.0856739E+00  3.7881494E-02  1.0986116E+00 -1.0986118E+00 -2.3841858E-07
